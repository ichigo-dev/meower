//------------------------------------------------------------------------------
//! API schemas.
//------------------------------------------------------------------------------

pub mod mypage;

use serde::{ Serialize, Deserialize };


//------------------------------------------------------------------------------
/// API response.
//------------------------------------------------------------------------------
#[derive(Debug, Serialize, Deserialize)]
pub struct ApiResponse<T>
{
    pub data: Result<T, String>,
}

impl<T> ApiResponse<T>
{
    //--------------------------------------------------------------------------
    /// Creates OK response.
    //--------------------------------------------------------------------------
    pub fn ok( data: T ) -> Self
    {
        Self
        {
            data: Ok(data),
        }
    }

    //--------------------------------------------------------------------------
    /// Creates NG response.
    //--------------------------------------------------------------------------
    pub fn ng( message: String ) -> Self
    {
        Self
        {
            data: Err(message),
        }
    }

    //--------------------------------------------------------------------------
    /// Checks if the response is OK.
    //--------------------------------------------------------------------------
    pub fn is_ok( &self ) -> bool
    {
        self.data.is_ok()
    }

    //--------------------------------------------------------------------------
    /// Checks if the response is NG.
    //--------------------------------------------------------------------------
    pub fn is_ng( &self ) -> bool
    {
        self.data.is_err()
    }
}

impl<T: Clone> ApiResponse<T>
{
    //--------------------------------------------------------------------------
    /// Gets data.
    //--------------------------------------------------------------------------
    pub fn get_data( &self ) -> Result<T, String>
    {
        self.data.clone()
    }
}
