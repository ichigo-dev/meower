################################################################################
# Docker containers
################################################################################

services:

  ##############################################################################
  # Front-end application
  ##############################################################################
  frontend:
    container_name: meower_frontend
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    ports:
      - ${FRONTEND_PORT}:9000
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: "trunk serve --address 0.0.0.0 --release"
    depends_on:
      - backend
    tty: true

  ##############################################################################
  # Back-end application
  ##############################################################################
  backend:
    container_name: meower_backend
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    ports:
      - ${BACKEND_PORT}:9001
    volumes:
      - ./backend:/app
      - ./migration:/migration
      - ./entity:/entity
    working_dir: /app
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
    command: "cargo watch -x run"
    depends_on:
      - postgres
    tty: true

  ##############################################################################
  # Authentication proxy server
  ##############################################################################
  auth-proxy:
    container_name: meower_auth_proxy
    build:
      context: .
      dockerfile: ./docker/auth_proxy/Dockerfile
    ports:
      - ${AUTH_PROXY_PORT}:8080
    volumes:
      - ./auth_proxy:/app
      - ./migration:/migration
      - ./entity:/entity
    working_dir: /app
    environment:
      DEBUG_MODE: ${DEBUG_MODE}
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
      AUTH_PROXY_PORT: ${AUTH_PROXY_PORT}
      PROXY_URL: ${PROXY_URL}:${FRONTEND_PORT}
      JWT_ISSUE: ${JWT_ISSUE}
      JWT_SUBJECT: ${JWT_SUBJECT}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES: ${JWT_EXPIRES}
      ARGON2_PHC_SALT: ${ARGON2_PHC_SALT}
    command: "cargo watch -x run"
    depends_on:
      - postgres
      - frontend
    tty: true

  ##############################################################################
  # PostgreSQL database
  ##############################################################################
  postgres:
    container_name: meower_postgres
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    command: ["-c", "max_connections=200"]
    restart: always
    tty: true

  ##############################################################################
  # Database migration
  ##############################################################################
  migration:
    container_name: meower_migration
    build:
      context: .
      dockerfile: ./docker/migration/Dockerfile
    ports:
      - ${MIGRATION_PORT}:5433
    volumes:
      - ./migration:/migration
      - ./entity:/entity
    working_dir: /
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
      ARGON2_PHC_SALT: ${ARGON2_PHC_SALT}
    depends_on:
      - postgres
    tty: true
