//------------------------------------------------------------------------------
//! Shared state.
//------------------------------------------------------------------------------

use crate::Config;

use sea_orm::{ Database, DbConn };


//------------------------------------------------------------------------------
/// State.
//------------------------------------------------------------------------------
#[derive(Clone)]
pub(crate) struct State
{
    config: Config,
    hdb: DbConn,
}

impl State
{
    //--------------------------------------------------------------------------
    /// Initializes the state.
    //--------------------------------------------------------------------------
    pub(crate) async fn init( config: Config ) -> Self
    {
        let hdb = Database::connect(&config.database_url()).await.unwrap();
        Self
        {
            config,
            hdb,
        }
    }

    //--------------------------------------------------------------------------
    /// Gets the configuration.
    //--------------------------------------------------------------------------
    pub(crate) fn config(&self) -> &Config
    {
        &self.config
    }

    //--------------------------------------------------------------------------
    /// Gets the database connection.
    //--------------------------------------------------------------------------
    pub(crate) fn hdb(&self) -> &DbConn
    {
        &self.hdb
    }
}
