################################################################################
# Docker containers
################################################################################


################################################################################
# Services
################################################################################
services:

  ##############################################################################
  # System containers
  ##############################################################################

  # Auth server
  auth:
    container_name: meower_auth
    build:
      context: .
      dockerfile: ./docker/services/auth/Dockerfile
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    volumes:
      - ./system/auth:/system/auth
      - ./system/common:/system/common
      - ./proto/ui_catalog/assets/css/style.css:/system/auth/core/assets/css/ui.css
      - ./env/${ENV}/${JWT_PRIVATE_KEY}:/system/auth/core/env/${JWT_PRIVATE_KEY}
    environment:
      PORT: ${AUTH_PORT}
      URL: ${AUTH_URL}
      DATABASE_URL: ${AUTH_DB_URL}
      FALLBACK_LOCALE: ${FALLBACK_LOCALE}
      CLIENT_ID_KEY: ${CLIENT_ID_KEY}
      CLIENT_SECRET_KEY: ${CLIENT_SECRET_KEY}
      SMTP_HOST: ${AUTH_SMTP_HOST}
      SMTP_PORT: ${AUTH_SMTP_PORT}
      SMTP_USER: ${AUTH_SMTP_USER}
      SMTP_PASSWORD: ${AUTH_SMTP_PASSWORD}
      SMTP_TLS: ${AUTH_SMTP_TLS}
      SYSTEM_EMAIL_ADDRESS: ${AUTH_SYSTEM_EMAIL_ADDRESS}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
      API_KEY_KEY: ${AUTH_API_KEY_KEY}
      API_KEY_VAL: ${AUTH_API_KEY_VAL}
    working_dir: /system/auth/core
    command: "cargo watch -x run"
    depends_on:
      - auth_db
    tty: true

  # Auth server DB
  auth_db:
    container_name: meower_auth_db
    build:
      context: .
      dockerfile: ./docker/services/postgres/Dockerfile
    ports:
      - ${AUTH_DB_PORT}:${AUTH_DB_PORT}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    command: ["-c", "max_connections=200", "-p", "${AUTH_DB_PORT}"]
    restart: always
    tty: true

  # App server
  app:
    container_name: meower_app
    build:
      context: .
      dockerfile: ./docker/services/app/Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./system/app:/system/app
      - ./system/app/spa/dist:/system/app/core/public
      - ./system/common:/system/common
    environment:
      PORT: ${APP_PORT}
      USER_TOKEN_KEY: ${APP_USER_TOKEN_KEY}
      DATABASE_URL: ${APP_DB_URL}
      CLIENT_ID_KEY: ${CLIENT_ID_KEY}
      CLIENT_SECRET_KEY: ${CLIENT_SECRET_KEY}
      CLIENT_ID: ${MEOWER_CLIENT_ID}
      CLIENT_SECRET: ${MEOWER_CLIENT_SECRET}
      AUTH_URL: ${AUTH_URL}
      AUTH_API_URL: ${AUTH_API_URL}
      ACCESS_TOKEN_KEY: ${ACCESS_TOKEN_KEY}
      PUBLIC_USER_ID_KEY: ${PUBLIC_USER_ID_KEY}
    working_dir: /system/app/core
    command: "cargo watch -x run"
    depends_on:
      - app_db
    tty: true

  # App server DB
  app_db:
    container_name: meower_app_db
    build:
      context: .
      dockerfile: ./docker/services/postgres/Dockerfile
    ports:
      - ${APP_DB_PORT}:${APP_DB_PORT}
    volumes:
      - app_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    command: ["-c", "max_connections=200", "-p", "${APP_DB_PORT}"]
    restart: always
    tty: true

  # Application SPA
  app_spa:
    container_name: meower_app_spa
    build:
      context: .
      dockerfile: ./docker/services/spa/Dockerfile
    volumes:
      - ./system/app/spa:/system/app/spa
      - ./proto/ui_catalog/assets/scss:/system/app/spa/public/scss
      - ./system/apis/account/core/schema.graphql:/system/app/spa/graphql/schema/account.graphql
    environment:
      DEV_MODE: ${DEV_MODE}
      APP_URL: ${APP_URL}
      API_URL: ${API_GW_URL}
      CLIENT_ID_KEY: ${CLIENT_ID_KEY}
      ACCESS_TOKEN_KEY: ${ACCESS_TOKEN_KEY}
      PUBLIC_USER_ID_KEY: ${PUBLIC_USER_ID_KEY}
    working_dir: /system/app/spa
    command: "trunk watch --release"
    tty: true

  # API Gateway
  api_gw:
    container_name: meower_api_gw
    build:
      context: .
      dockerfile: ./docker/services/api_gw/Dockerfile
    ports:
      - ${API_GW_PORT}:${API_GW_PORT}
    volumes:
      - ./system/api_gw:/system/api_gw
      - ./system/common:/system/common
      - ./env/${ENV}/${JWT_PUBLIC_KEY}:/system/api_gw/core/env/${JWT_PUBLIC_KEY}
    environment:
      PORT: ${API_GW_PORT}
      CLIENT_ID_KEY: ${CLIENT_ID_KEY}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      AUTH_API_URL: ${AUTH_API_URL}
      AUTH_API_KEY_KEY: ${AUTH_API_KEY_KEY}
      AUTH_API_KEY_VAL: ${AUTH_API_KEY_VAL}
      ACCOUNT_API_URL: ${ACCOUNT_API_URL}
    working_dir: /system/api_gw/core
    command: "cargo watch -x run"
    depends_on:
      - auth
    tty: true


  ##############################################################################
  # APIs
  ##############################################################################

  # Account API
  account:
    container_name: meower_account
    build:
      context: .
      dockerfile: ./docker/services/account/Dockerfile
    ports:
      - ${ACCOUNT_PORT}:${ACCOUNT_PORT}
    volumes:
      - ./system/apis/account:/system/apis/account
      - ./system/common:/system/common
    environment:
      PORT: ${ACCOUNT_PORT}
      DATABASE_URL: ${ACCOUNT_DB_URL}
      FALLBACK_LOCALE: ${FALLBACK_LOCALE}
      STORAGE_URL: ${ACCOUNT_STORAGE_URL}
      STORAGE_BUCKET: ${ACCOUNT_STORAGE_BUCKET}
    working_dir: /system/apis/account/core
    command: "cargo watch -x run --ignore 'schema.graphql' --ignore 'uploads/*'"
    depends_on:
      - account_db
    tty: true

  # Account API DB
  account_db:
    container_name: meower_account_db
    build:
      context: .
      dockerfile: ./docker/services/postgres/Dockerfile
    ports:
      - ${ACCOUNT_DB_PORT}:${ACCOUNT_DB_PORT}
    volumes:
      - account_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${ACCOUNT_DB_NAME}
      POSTGRES_USER: ${ACCOUNT_DB_USER}
      POSTGRES_PASSWORD: ${ACCOUNT_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    command: ["-c", "max_connections=200", "-p", "${ACCOUNT_DB_PORT}"]
    restart: always
    tty: true


  ##############################################################################
  # Development tools
  ##############################################################################

  # Development tools
  dev:
    container_name: meower_dev
    build:
      context: .
      dockerfile: ./docker/services/dev/Dockerfile
    volumes:
      - ./system:/system
      - ./proto:/proto
    environment:
      MEOWER_CLIENT_ID: ${MEOWER_CLIENT_ID}
      MEOWER_CLIENT_SECRET: ${MEOWER_CLIENT_SECRET}
      MEOWER_REDIRECT_URI: ${MEOWER_REDIRECT_URI}
      MEOWER_ALLOW_ORIGIN: ${MEOWER_ALLOW_ORIGIN}
    tty: true

  # mailhog
  mailhog:
    container_name: meower_mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_PORT}:8025
      - ${MAILHOG_SMTP_PORT}:1025
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /tmp
    volumes:
      - mailhog_data:/tmp

  # tbls
  tbls:
    container_name: meower_tbls
    image: k1low/tbls:latest
    volumes:
      - ${TBLS_OUTPUT_PATH}:/work
    working_dir: /work
    depends_on:
      - auth_db
      - app_db
    tty: true

  # UI catalog
  ui:
    container_name: meower_ui
    build:
      context: .
      dockerfile: ./docker/services/ui/Dockerfile
    ports:
      - ${UI_CATALOG_PORT}:8030
    volumes:
      - ./proto/ui_catalog:/proto/ui_catalog
      - ui_catalog_node_modules:/proto/ui_catalog/node_modules
    working_dir: /proto/ui_catalog
    command: "npx gulp"
    tty: true

  # PGAdmin
  pgadmin:
    image: dpage/pgadmin4:8.3
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - pgadmindata:/var/lib/pgadmin4/storage
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: Asia/Tokyo
    depends_on:
      - auth_db
      - app_db
      - account_db


################################################################################
# Volumes
################################################################################
volumes:
  auth_db_data:
  app_db_data:
  account_db_data:
  mailhog_data:
  ui_catalog_node_modules:
  pgadmindata:
